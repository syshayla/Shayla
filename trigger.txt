SQL> CREATE OR REPLACE TRIGGER USA_AFTER_INSERT AFTER INSERT ON USA
  2  FOR EACH ROW
  3  DECLARE
  4  BEGIN
  5  INSERT INTO USA_BACKUP VALUES (:new.usaid, :new.fname, :new.lname);
  6  DBMS_OUTPUT.PUT_LINE('DATA INSERTED');
  7  END;
  8  /

Trigger created.

SQL> CREATE OR REPLACE TRIGGER usa_after_update
  2  AFTER UPDATE ON USA
  3  FOR EACH ROW
  4  DECLARE
  5  BEGIN
  6  UPDATE usa_backup
  7  set usaid = :new.usaid
  8  where usaid = :old.usaid;
  9  DBMS_OUTPUT.PUT_LINE ('RECORD SUCCESSFULLY UPDATED');
 10  END;
 11  /

Trigger created.
update usa set usaid=1222 where usaid=501;

SQL>  CREATE OR REPLACE TRIGGER usa_after_delete
  2  AFTER DELETE ON USA
  3  FOR EACH ROW
  4  DECLARE
  5  BEGIN
  6  DELETE FROM usa_backup
  7  where usaid = :old.usaid;
  8  DBMS_OUTPUT.PUT_LINE ('RECORD SUCCESSFULLY DELETED');
  9  END;
 10  /

Trigger created.

multiple updated,


SQL> CREATE OR REPLACE TRIGGER rahim_after_update AFTER UPDATE ON rahim
  2  FOR EACH ROW
  3  DECLARE
  4  BEGIN
  5  UPDATE rahim_backup
  6  set code= :new.code, name=:new.name, country=:new.country
  7  where code= :old.code;
  8  DBMS_OUTPUT.PUT_LINE('SUCCESSFULLY UPDATE');
  9  END;
 10  /

Trigger created.


SQL> update rahim set code=1002, name= 'y', country= default where code=102;

1 row updated.

SQL> update rahim set code=1003, name= 'Z', country= default where code=103;

1 row updated.



